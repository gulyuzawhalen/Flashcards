{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guluz\\\\thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Card\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { readCard, readDeck, updateCard } from \"../utils/api\";\nimport CardForm from \"./Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CardEdit({\n  title\n}) {\n  _s();\n\n  const history = useHistory();\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [card, setCard] = useState({\n    front: \"\",\n    back: \"\"\n  });\n  const [deck, setDeck] = useState({\n    cards: []\n  });\n  useEffect(() => {\n    readDeck(deckId).then(setDeck);\n    readDeck(cardId).then(setCard);\n  }, [deckId, cardId]);\n\n  function submitHandler(card) {\n    updateCard(card).then(doneHandler);\n  }\n\n  function doneHandler() {\n    history.push(`/decks/${deck.id}`);\n  }\n\n  const littleChild = card.id ? /*#__PURE__*/_jsxDEV(CardForm, {\n    onDone: doneHandler,\n    onSubmit: submitHandler,\n    initialState: card,\n    doneButtonLabel: \"Cancel\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"oi oi-home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), \"Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: [\" Deck\", deck.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: [\"Edit Card \", cardId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), littleChild]\n  }, void 0, true);\n}\n\n_s(CardEdit, \"f87viJlQRZ6w5yv1LjT/yh/Xke8=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CardEdit;\nexport default CardEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardEdit\");","map":{"version":3,"sources":["C:/Users/guluz/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Card/Edit.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","readCard","readDeck","updateCard","CardForm","CardEdit","title","history","deckId","cardId","card","setCard","front","back","deck","setDeck","cards","then","submitHandler","doneHandler","push","id","littleChild","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA+C,cAA/C;AACA,OAAOC,QAAP,MAAqB,QAArB;;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA6B;AAAA;;AACzB,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAM;AAAES,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBT,SAAS,EAApC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC;AAAEe,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAAD,CAAhC;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC;AAAEmB,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAhC;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ,CAACM,MAAD,CAAR,CAAiBS,IAAjB,CAAsBF,OAAtB;AACAb,IAAAA,QAAQ,CAACO,MAAD,CAAR,CAAiBQ,IAAjB,CAAsBN,OAAtB;AACH,GAHQ,EAGN,CAACH,MAAD,EAASC,MAAT,CAHM,CAAT;;AAIA,WAASS,aAAT,CAAuBR,IAAvB,EAA6B;AACzBP,IAAAA,UAAU,CAACO,IAAD,CAAV,CAAiBO,IAAjB,CAAsBE,WAAtB;AACH;;AACD,WAASA,WAAT,GAAuB;AACnBZ,IAAAA,OAAO,CAACa,IAAR,CAAc,UAASN,IAAI,CAACO,EAAG,EAA/B;AACH;;AACD,QAAMC,WAAW,GAAGZ,IAAI,CAACW,EAAL,gBAChB,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEF,WAAlB;AAA+B,IAAA,QAAQ,EAAED,aAAzC;AAAwD,IAAA,YAAY,EAAER,IAAtE;AAA4E,IAAA,eAAe,EAAC;AAA5F;AAAA;AAAA;AAAA;AAAA,UADgB,gBAGhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAKA,sBACI;AAAA,4BACI;AAAK,oBAAW,YAAhB;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA,oCACI;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASF,MAAO,EAA3B;AAAA,gCACKM,IAAI,CAACS,IADV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAYI;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAuC,0BAAa,MAApD;AAAA,mCACed,MADf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ,EAoBKa,WApBL;AAAA,kBADJ;AAwBH;;GA9CQjB,Q;UACWN,U,EACWC,S;;;KAFtBK,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { readCard, readDeck, updateCard } from \"../utils/api\";\r\nimport CardForm from \"./Form\";\r\n\r\nfunction CardEdit({ title }) {\r\n    const history = useHistory();\r\n    const { deckId, cardId } = useParams();\r\n    const [card, setCard] = useState({ front: \"\", back: \"\"});\r\n\r\n    const [deck, setDeck] = useState({ cards: [] });\r\n\r\n    useEffect(() => {\r\n        readDeck(deckId).then(setDeck);\r\n        readDeck(cardId).then(setCard);\r\n    }, [deckId, cardId]);\r\n    function submitHandler(card) {\r\n        updateCard(card).then(doneHandler);\r\n    }\r\n    function doneHandler() {\r\n        history.push(`/decks/${deck.id}`);\r\n    }\r\n    const littleChild = card.id ? ( \r\n        <CardForm onDone={doneHandler} onSubmit={submitHandler} initialState={card} doneButtonLabel=\"Cancel\"/>\r\n    ) : (\r\n        <p>Loading...</p>\r\n    );\r\n    return (\r\n        <>\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\">\r\n                        <Link to=\"/\">\r\n                            <span className=\"oi oi-home\" />\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item\">\r\n                        <Link to={`/decks/${deckId}`}> Deck\r\n                            {deck.name}\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                        Edit Card {cardId}\r\n                    </li>\r\n                </ol>\r\n            </nav>\r\n            <h1>Edit Card</h1>\r\n            {littleChild}\r\n        </>\r\n    )\r\n}\r\nexport default CardEdit;"]},"metadata":{},"sourceType":"module"}