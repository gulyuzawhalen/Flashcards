{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guluz\\\\thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Card\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardForm({\n  onSubmit,\n  onDone,\n  deckName = \"Loading...\",\n  initialState,\n  doneButtonLabel = \"Done\"\n}) {\n  _s();\n\n  const [card, setCard] = useState(initialState);\n\n  function changeHandler({\n    target: {\n      name,\n      value\n    }\n  }) {}\n\n  ;\n\n  function submitHandler(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    onSubmit({ ...card\n    });\n    setCard({\n      front: \"\",\n      back: \"\"\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: \"card-edit\",\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [deck.name, \": Add Card\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Front\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"teaxtarea\", {\n          id: \"front\",\n          tabIndex: \"1\",\n          name: \"front\",\n          value: card.front,\n          required: true,\n          className: \"form-group\",\n          placeholder: \"Front side of card\",\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"back\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"back\",\n          tabIndex: \"2\",\n          name: \"back\",\n          className: \"form-group\",\n          required: true,\n          placeholder: \"Back side of card\",\n          value: card.back,\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary mr-2\",\n        onDone: onDone,\n        tabIndex: \"4\",\n        children: doneButtonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        tabIndex: \"3\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardForm, \"EFODjyQOLL6Oi+S/YveGRS6tRyI=\");\n\n_c = CardForm;\n;\nexport default CardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardForm\");","map":{"version":3,"sources":["C:/Users/guluz/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Card/Form.js"],"names":["React","useState","useHistory","CardForm","onSubmit","onDone","deckName","initialState","doneButtonLabel","card","setCard","changeHandler","target","name","value","submitHandler","e","preventDefault","stopPropagation","front","back","deck"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,SAASC,QAAT,CAAkB;AAChBC,EAAAA,QADgB;AAEhBC,EAAAA,MAFgB;AAGhBC,EAAAA,QAAQ,GAAG,YAHK;AAIhBC,EAAAA,YAJgB;AAKhBC,EAAAA,eAAe,GAAG;AALF,CAAlB,EAMG;AAAA;;AACD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACM,YAAD,CAAhC;;AAEA,WAASI,aAAT,CAAuB;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAV,GAAvB,EAAoD,CAAE;;AAAA;;AACtD,WAASC,aAAT,CAAuBC,CAAvB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AACAd,IAAAA,QAAQ,CAAC,EAAE,GAAGK;AAAL,KAAD,CAAR;AACAC,IAAAA,OAAO,CAAC;AAAES,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,IAAI,EAAE;AAAnB,KAAD,CAAP;AACD;;AAAA;AACD,sBACE;AAAM,IAAA,QAAQ,EAAEL,aAAhB;AAA+B,IAAA,SAAS,EAAC,WAAzC;AAAA,2BACE;AAAA,8BACE;AAAA,mBAAKM,IAAI,CAACR,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACI,UAAA,EAAE,EAAC,OADP;AAEI,UAAA,QAAQ,EAAC,GAFb;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,KAAK,EAAEJ,IAAI,CAACU,KAJhB;AAKI,UAAA,QAAQ,EAAE,IALd;AAMI,UAAA,SAAS,EAAC,YANd;AAOI,UAAA,WAAW,EAAC,oBAPhB;AAQI,UAAA,QAAQ,EAAER;AARd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAeI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACI,UAAA,EAAE,EAAC,MADP;AAEI,UAAA,QAAQ,EAAC,GAFb;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,SAAS,EAAC,YAJd;AAKI,UAAA,QAAQ,EAAE,IALd;AAMI,UAAA,WAAW,EAAC,mBANhB;AAOI,UAAA,KAAK,EAAEF,IAAI,CAACW,IAPhB;AAQI,UAAA,QAAQ,EAAET;AARd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eA4BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,wBAAhC;AAAyD,QAAA,MAAM,EAAEN,MAAjE;AAAyE,QAAA,QAAQ,EAAC,GAAlF;AAAA,kBAAuFG;AAAvF;AAAA;AAAA;AAAA;AAAA,cA5BF,eA6BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,QAAA,QAAQ,EAAC,GAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAnDQL,Q;;KAAAA,Q;AAmDR;AACC,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction CardForm({\r\n  onSubmit,\r\n  onDone,\r\n  deckName = \"Loading...\",\r\n  initialState,\r\n  doneButtonLabel = \"Done\",\r\n}) {\r\n  const [card, setCard] = useState(initialState);\r\n\r\n  function changeHandler({ target: { name, value } }) {};\r\n  function submitHandler(e){\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    onSubmit({ ...card });\r\n    setCard({ front: \"\", back: \"\" })\r\n  };\r\n  return(      \r\n    <form onSubmit={submitHandler} className=\"card-edit\">\r\n      <fieldset>\r\n        <h3>{deck.name}: Add Card</h3>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Front</label>\r\n            <teaxtarea\r\n                id=\"front\"\r\n                tabIndex=\"1\"\r\n                name=\"front\"\r\n                value={card.front}\r\n                required={true}\r\n                className=\"form-group\"\r\n                placeholder=\"Front side of card\"\r\n                onChange={changeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"back\">Back</label>\r\n            <textarea \r\n                id=\"back\"\r\n                tabIndex=\"2\"\r\n                name=\"back\"\r\n                className=\"form-group\"\r\n                required={true}\r\n                placeholder=\"Back side of card\"\r\n                value={card.back}\r\n                onChange={changeHandler}\r\n            />\r\n          </div>\r\n        <button type=\"button\" className=\"btn btn-secondary mr-2\" onDone={onDone} tabIndex=\"4\">{doneButtonLabel}</button>\r\n        <button type=\"submit\" className=\"btn btn-primary\" tabIndex=\"3\">Save</button>\r\n      </fieldset>\r\n    </form>\r\n  )\r\n};\r\n  export default CardForm;"]},"metadata":{},"sourceType":"module"}