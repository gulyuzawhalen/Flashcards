{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guluz\\\\thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Deck\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DeckForm({\n  onSubmit,\n  onCancel,\n  initialState = {\n    name: \"\",\n    description: \"\"\n  }\n}) {\n  _s();\n\n  const [deck, setDeck] = useState(initialState);\n\n  function changeHandler({\n    target: {\n      name,\n      value\n    }\n  }) {\n    setDeck(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    onSubmit(deck);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      className: \"deck-edit\",\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            name: \"name\",\n            value: deck.name,\n            required: true,\n            className: \"form-group\",\n            placeholder: \"Deck Name\",\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            className: \"form-group\",\n            rows: \"4\",\n            required: true,\n            placeholder: \"Brief description of the deck\",\n            value: deck.description,\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary mr-2\",\n          onCancel: onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DeckForm, \"Nns6FnTYybmbvqYayfq95vXfOOU=\");\n\n_c = DeckForm;\nexport default DeckForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckForm\");","map":{"version":3,"sources":["C:/Users/guluz/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Deck/Form.js"],"names":["React","useState","DeckForm","onSubmit","onCancel","initialState","name","description","deck","setDeck","changeHandler","target","value","prevState","submitHandler","e","preventDefault","stopPropagation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,YAAY,GAAG;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,WAAW,EAAE;AAAzB;AAArC,CAAlB,EAAwF;AAAA;;AACpF,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACI,YAAD,CAAhC;;AAEA,WAASK,aAAT,CAAuB;AAAEC,IAAAA,MAAM,EAAE;AAAEL,MAAAA,IAAF;AAAQM,MAAAA;AAAR;AAAV,GAAvB,EAAmD;AAC/CH,IAAAA,OAAO,CAAEI,SAAD,KAAgB,EACpB,GAAGA,SADiB;AAEpB,OAACP,IAAD,GAAQM;AAFY,KAAhB,CAAD,CAAP;AAIH;;AACD,WAASE,aAAT,CAAuBC,CAAvB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AACAd,IAAAA,QAAQ,CAACK,IAAD,CAAR;AACH;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEM,aAAhB;AAA+B,MAAA,SAAS,EAAC,WAAzC;AAAA,6BACI;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,EAAE,EAAC,MADP;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,IAAI,EAAC,MAHT;AAII,YAAA,KAAK,EAAEN,IAAI,CAACF,IAJhB;AAKI,YAAA,QAAQ,EAAE,IALd;AAMI,YAAA,SAAS,EAAC,YANd;AAOI,YAAA,WAAW,EAAC,WAPhB;AAQI,YAAA,QAAQ,EAAEI;AARd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,EAAE,EAAC,aADP;AAEI,YAAA,IAAI,EAAC,aAFT;AAGI,YAAA,SAAS,EAAC,YAHd;AAII,YAAA,IAAI,EAAC,GAJT;AAKI,YAAA,QAAQ,EAAE,IALd;AAMI,YAAA,WAAW,EAAC,+BANhB;AAOI,YAAA,KAAK,EAAEF,IAAI,CAACD,WAPhB;AAQI,YAAA,QAAQ,EAAEG;AARd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,eA2BI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,wBAAhC;AAAyD,UAAA,QAAQ,EAAEN,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BJ,eA4BI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAsCH;;GArDQF,Q;;KAAAA,Q;AAsDT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction DeckForm({ onSubmit, onCancel, initialState = { name: \"\", description: \"\" },}) {\r\n    const [deck, setDeck] = useState(initialState);\r\n\r\n    function changeHandler({ target: { name, value }}) {\r\n        setDeck((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }))\r\n    }\r\n    function submitHandler(e){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onSubmit(deck);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Create Deck</h3>\r\n            <form onSubmit={submitHandler} className=\"deck-edit\">\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={deck.name}\r\n                            required={true}\r\n                            className=\"form-group\"\r\n                            placeholder=\"Deck Name\"\r\n                            onChange={changeHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"description\">Description:</label>\r\n                        <textarea \r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            className=\"form-group\"\r\n                            rows=\"4\"\r\n                            required={true}\r\n                            placeholder=\"Brief description of the deck\"\r\n                            value={deck.description}\r\n                            onChange={changeHandler}\r\n                        />\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-secondary mr-2\" onCancel={onCancel}>Cancel</button>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </fieldset>\r\n            </form>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default DeckForm;"]},"metadata":{},"sourceType":"module"}