{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guluz\\\\thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Deck\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"../utils/api\";\nimport DeckForm from \"./Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DeckEdit() {\n  _s();\n\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({\n    name: \"\",\n    description: \"\"\n  });\n  useEffect(() => {\n    readDeck(deckId).then(setDeck);\n  }, [deckId]);\n\n  function submitHandler(updatedDeck) {\n    updateDeck(updatedDeck).then(savedDeck => history.push(`/decks/${savedDeck.id}`));\n  }\n\n  function cancel() {\n    history.goBack();\n  } // deck form here\n\n\n  const littleChild = deck.id ? /*#__PURE__*/_jsxDEV(DeckForm, {\n    onCancel: cancel,\n    onSubmit: submitHandler,\n    initialState: deck\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"oi oi-home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), \"Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Edit Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), littleChild]\n  }, void 0, true);\n}\n\n_s(DeckEdit, \"eC5EbMosoCAOnuyigRMts8ojQY8=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = DeckEdit;\nexport default DeckEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckEdit\");","map":{"version":3,"sources":["C:/Users/guluz/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Deck/Edit.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","readDeck","updateDeck","DeckForm","DeckEdit","history","deckId","deck","setDeck","name","description","then","submitHandler","updatedDeck","savedDeck","push","id","cancel","goBack","littleChild"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;AACA,OAAOC,QAAP,MAAqB,QAArB;;;;AAGA,SAASC,QAAT,GAAmB;AAAA;;AACf,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AAEA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,WAAW,EAAE;AAAzB,GAAD,CAAhC;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,QAAQ,CAACK,MAAD,CAAR,CAAiBK,IAAjB,CAAsBH,OAAtB;AACH,GAFQ,EAEN,CAACF,MAAD,CAFM,CAAT;;AAIA,WAASM,aAAT,CAAuBC,WAAvB,EAAmC;AAC/BX,IAAAA,UAAU,CAACW,WAAD,CAAV,CAAwBF,IAAxB,CAA8BG,SAAD,IAAeT,OAAO,CAACU,IAAR,CAAc,UAASD,SAAS,CAACE,EAAG,EAApC,CAA5C;AACH;;AACD,WAASC,MAAT,GAAiB;AACbZ,IAAAA,OAAO,CAACa,MAAR;AACH,GAdc,CAef;;;AACA,QAAMC,WAAW,GAAGZ,IAAI,CAACS,EAAL,gBAChB,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAEC,MAApB;AAA4B,IAAA,QAAQ,EAAEL,aAAtC;AAAqD,IAAA,YAAY,EAAEL;AAAnE;AAAA;AAAA;AAAA;AAAA,UADgB,gBAGhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAKA,sBACI;AAAA,4BACI;AAAK,oBAAW,YAAhB;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA,oCACI;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASD,MAAO,EAA3B;AAAA,sBACKC,IAAI,CAACE;AADV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAYI;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAuC,0BAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ,EAoBKU,WApBL;AAAA,kBADJ;AAwBH;;GA7CQf,Q;UACWL,U,EACGC,S;;;KAFdI,Q;AA8CT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { readDeck, updateDeck } from \"../utils/api\"\r\nimport DeckForm from \"./Form\";\r\n\r\n\r\nfunction DeckEdit(){\r\n    const history = useHistory();\r\n    const { deckId } = useParams();\r\n\r\n    const [deck, setDeck] = useState({ name: \"\", description: \"\"});\r\n    useEffect(() => {\r\n        readDeck(deckId).then(setDeck)\r\n    }, [deckId]);\r\n\r\n    function submitHandler(updatedDeck){\r\n        updateDeck(updatedDeck).then((savedDeck) => history.push(`/decks/${savedDeck.id}`))\r\n    }\r\n    function cancel(){\r\n        history.goBack();\r\n    }\r\n    // deck form here\r\n    const littleChild = deck.id ? ( \r\n        <DeckForm onCancel={cancel} onSubmit={submitHandler} initialState={deck}/>\r\n    ) : (\r\n        <p>Loading...</p>\r\n    );\r\n    return (\r\n        <>\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\">\r\n                        <Link to=\"/\">\r\n                            <span className=\"oi oi-home\" />\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item\">\r\n                        <Link to={`/decks/${deckId}`}>\r\n                            {deck.name}\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                        Edit Deck\r\n                    </li>\r\n                </ol>\r\n            </nav>\r\n            <h1>Edit Deck</h1>\r\n            {littleChild}\r\n        </>\r\n    )\r\n}\r\nexport default DeckEdit;"]},"metadata":{},"sourceType":"module"}